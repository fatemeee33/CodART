[REFACTORING]
types = extract_class,move_method,pull_up_method,push_down_method,extract_method

[RELATIONS]
GOD_CLASS_PATH = "/app/smell_csvs/JSON20201115/God-Class_JASON-20201115.csv"
FEATURE_ENVY_PATH = "/app/smell_csvs/JSON20201115/Feature-Envy2_JASON-20201115.csv"
LONG_METHOD_PATH = "/app/smell_csvs/JSON20201115/Long-Method2_JASON-20201115.csv"



[UNDERSTAND]
sys_path_object = /app/scitools/bin/linux64/Python
;sys_path_object = /home/y/Downloads/understand/Understand-6.5.1201-Linux-64bit/scitools/bin/linux64/Python
sys_path_index = 0
os_environs_key = LD_LIBRARY_PATH
os_environs_value = /app/scitools/bin/linux64/Python
;os_environs_value = /home/y/Downloads/understand/Understand-6.5.1201-Linux-64bit/scitools/bin/linux64/Python

[CORE]
option = 1

[Config]
repo_address = /app/jflex
db_address = /app/jflex
db_name = jflex.udb
engine_core = Python3
PROJECT_LOG_DIR = /home/y/CodeArt/
POPULATION_SIZE = 100
LOWER_BAND = 10
UPPER_BAND = 50
OBJECTIVE = 8
evaluate_in_parallel = True
verbose_design_metrics = True
PROJECT_NAME = JSON


[METRICS]
initial_value_modularity = 1.0
initial_value_testability = 1.0


[Logging]
filename = /home/y/CodART/a.log
level = DEBUG

[MODEL_PATHS]
scaler1_path = codart/metrics/learner_testability/data_model/DS_ALL_METRICS_JFLEX.joblib
model5_path = codart/metrics/sklearn_models8/VR1_DS8.joblib
model_branch_path = codart/metrics/sklearn_models8/VR1_DS8.joblib
model_line_path = codart/metrics/sklearn_models9/VR1_DS9.joblib

[COD2VEC]
SHOW_TOP_CONTEXTS = 10
MAX_PATH_LENGTH = 8
MAX_PATH_WIDTH = 2
JAR_PATH = codart/learner/cod2vec/JavaExtractor/JPredict/target/JavaExtractor-0.0.1-SNAPSHOT.jar
EXPORT_CODE_VECTORS = False
MAX_CONTEXTS = 1000

[TRAINING]
torch_manual_seed = 0
frames_per_batch = 6000
n_iters = 10
num_epochs = 30
minibatch_size = 400
learning_rate = 0.0003
max_grad_norm = 1.0
max_steps = 100

[PPO]
clip_epsilon = 0.2
gamma = 0.99
lambda = 0.9
entropy_eps = 0.0001
scenario_name = navigation
n_agents = 2
continuous_actions = True
centralised = False
depth = 2
num_cells = 256
share_parameters_critic = True



[ENVIRONMENT]
# Environment configuration
project_name = refactoring_project
udb_path = /path/to/project.und
n_obj = 8
lower_band = 1
upper_bound = 50
population_size = 100
version_id = v1.0
project_path = /path/to/project/source

# Environment options
evaluate_in_parallel = False
verbose_design_metrics = True
use_reward_normalization = True
use_observation_normalization = True

[MINIO]
# MinIO configuration for result storage
endpoint = localhost:9000
access_key = minioadmin
secret_key = minioadmin
secure = False
results_bucket = ml-models
metrics_bucket = training-metrics

# Connection settings
connect_timeout = 10
read_timeout = 30

[LOGGING]
# Logging configuration
log_level = INFO
log_format = %(asctime)s - %(name)s - %(levelname)s - %(message)s
log_file = training.log
enable_file_logging = True
enable_console_logging = True

[CELERY]
# Celery configuration
broker_url = redis://redis:6379/0
result_backend = redis://redis:6379/0
task_serializer = json
accept_content = json
result_serializer = json
timezone = UTC
enable_utc = True

# Task routing
ml_training_queue = ml_training
ml_evaluation_queue = ml_evaluation

[EVALUATION]
# Evaluation settings
evaluation_episodes = 10
evaluation_max_steps = 100
save_evaluation_videos = False
evaluation_frequency = 50

[OPTIMIZATION]
# Multi-objective optimization settings
objectives = reusability,understandability,flexibility,functionality,effectiveness,extendability,testability,modularity
objective_weights = 1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
normalization_method = running_mean
reward_scaling = 1.0

[CHECKPOINTING]
# Model checkpointing
save_best_model = True
save_latest_model = True
checkpoint_frequency = 100
max_checkpoints_to_keep = 5

[TRANSFORMS]
# Environment transforms
use_reward_transform = True
use_observation_transform = True
use_action_transform = True
reward_clip_range = -10.0,10.0
observation_clip_range = -5.0,5.0